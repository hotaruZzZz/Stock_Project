#預測股票
def predict(request):
    code = ''
    name = ''
    plotly_div = ''
    data = []
    result = ''
    db = pymysql.connect(host='localhost', port=3306, user='test', passwd='1234123zxc', db='django', charset='utf8')
    cursor = db.cursor()


    if request.method == "POST":

        #SQL語法
        sql = (
            "select * from stock_data_data where sDate > '2020-11-01' and sNumber = '0056' and sClose != (-1.00) order by sDate;")#執行語法
        print(sql)
        try:
          cursor.execute(sql)
          result = DataFrame(cursor.fetchall())
          data = result
          if data.empty == True:
              pass
          else:
              #提交修改
              db.commit()
              #print(data)
              print('success')
        except:
          #發生錯誤時停止執行SQL
          db.rollback()
          print('error')
        first_data , first_add_data , pred_0056 , train_0056 = studen_suggest.suggest_start(data, len(data) , 0)
        print(pred_0056 )
        print( train_0056)
        code = request.POST.get("stock_number")
        name = Stock.objects.filter(code=code)
        suggest_list = np.zeros((1,2))
        data = []
        #建立操作游標
        cursor = db.cursor()
        #SQL語法
        sql = (
            "select * from stock_data_data where sDate > '2014-01-01' and sNumber = '"
            + code +
            "' and sClose != (-1.00) order by sDate;"
            )#執行語法
        print(sql)
        try:
            cursor.execute(sql)
            result = DataFrame(cursor.fetchall())
            data = result
            
            if data.empty == True:
                pass
            else:
                #提交修改
                db.commit()
                #print(data)
                print('success')
        except:
            #發生錯誤時停止執行SQL
            db.rollback()
            print('error')
      
        #關閉連線
        db.close()
        print("--------------------------start")
        suggest , number1, number2, plotly_div, result = studen_suggest.suggest_start(data, len(data),1 , first_data , first_add_data , train_0056 , pred_0056)
        print("--------------------------end")
    return render(request, 'stock_datas/predict.html', context={'name':name,'plot_div': plotly_div, 'result':result})
